import { ComposeProvider, ProviderContext } from "@vlegm/cli";

export default {
  "version": "3.7",
  "services": {
<% for(const [key, service] of Object.entries(services)) { -%>
    "<%= key %>": {
  <% for(const [prop, value] of Object.entries(service)) { -%>
      "<%= prop %>": <%- JSON.stringify(value) %>,
  <% } -%>
    },
<% } -%>
<% for(const [key, repoService] of Object.entries(repoServices)) { -%>
    "<%= key %>": {<% -%>
  <% for(const [prop, value] of Object.entries(repoService)) { -%>
    <% if(prop === 'command') { %>
      "command": (context:ProviderContext) => {
        return "<%= value %>"
      },<% -%>
    <% } else if(prop === 'image') { %>
      "image": (context:ProviderContext) => {
        return "<%= value %>"
      },<% -%>
    <% } else { %>
      "<%= prop %>": <%- JSON.stringify(value) %>, <% -%>
    <% } -%>
  <% } %>
    },
<% } -%>
  },
  "volumes": {
<% for(const [key, info] of Object.entries(volumes)) { -%>
    "<%= key %>": <%- JSON.stringify(info) %>,
<% } -%>
  }
} as ComposeProvider
